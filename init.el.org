#+TITLE: Emacs Configuration Tangle File
#+AUTHOR: Peter Prevos
#+PROPERTY: header-args :tangle yes :tangle ~/.emacs.d/init.el :results silent

* Introduction
Emacs uses an [[https://www.gnu.org/software/emacs/manual/html_node/emacs/Init-File.html][Init File]] in the =.emacs= folder or the home folder to store all configurations. The init file is the starting point to personalise your Emacs experience. This file ensures that the computer behaves the way you want it to, instead of the other way around.

This file creates an =init.el= file in the =.emacs= folder. This is one of the three possible ways to create an init file. I prefer storing everything in the =.emacs= folder because it keeps all configurations in one folder, which is easy to backup.

This Org file creates an Init File using literate programming to document and define the configuration. To create the configuration file, execute =C-c C-v C-t= (=org-babel-tangle=). This function reads all source code in this file and concatenates them into the one =.emacs/init.el= file.

If you like to try these settings without creating a new file, then type =C-c C-v C-b= to evaluate all code blocks. You can also evaluate each code block individually with =C-c C-c=, or each line separately with =C-x C-e=. Emacs will ask you to confirm that you want to execute code. To stop Emacs asking for confirmation, run =(setq org-confirm-babel-evaluate nil)=.
* Basic Configuration
** Redefine customisation file
Emacs includes a configuration system that [[https://www.gnu.org/software/emacs/manual/html_node/emacs/Saving-Customizations.html#Saving-Customizations][writes settings]] to the init file on the fly. This code snippet redefines the name of this file to ensure the =init.el= file is not modified by the configuration system. If the configuration system uses the =init.el= file, then tangling this Org file will overwrite any previous configurations.

The custom configuration file is loaded first. Any settings in the =init.el= file will override the configuration in the customisation file.

#+BEGIN_SRC emacs-lisp
;; Emacs init file
;; https://github.com/pprevos/EmacsLife
;; This init file is generated with an Org-Mode file. 
;; Any manual changes will be periodically overwritten by the script.
;; ------------------------------------------------------------------

;; Customize settings in their own file
(setq custom-file "~/.emacs.d/custom.el")
(when (file-exists-p custom-file)
    (load custom-file)
)
#+END_SRC
** Packages
Defining the locations of additional package repositories.

#+BEGIN_SRC emacs-lisp
;; Packages
(package-initialize)
(require 'package)
(add-to-list 'package-archives
    '("melpa" . "https://melpa.org/packages/"))
(add-to-list 'package-archives 
    '("org" . "https://orgmode.org/elpa/") t)
#+END_SRC
** Visual elements
- The startup settings inhibit startup messages and screen.
- Load the theme
- Hide the toolbar (who needs icons anyway?)
- Hide the scroll bar (using a mouse too often gives you RSI)
- Subtly highlight the current line to find your cursor
- Silence the [[https://www.emacswiki.org/emacs/AlarmBell][Alarm Bell]]

#+BEGIN_SRC emacs-lisp
;; Visual enhancements

;; Startup settings
(setq
  inhibit-startup-message t
  inhibit-startup-screen t
)

;; Load theme
(load-theme 'tsdh-dark)

;; Hide tool, menu and scroll bars
(tool-bar-mode -1)
(menu-bar-mode -1)
(scroll-bar-mode -1)

;; Highlight current line
(global-hl-line-mode 1)

;; Silence the alarm
(setq ring-bell-function 'ignore)
#+END_SRC
** Emacs mechanics
This section contains basic Emacs mechanics.
- All backup files saved in the same folder. The =backup-directory-alist= function lets you modify that behaviour. I prefer to store all backup files in one folder to avoid cluttering document folders.
- [[https://www.gnu.org/software/emacs/manual/html_node/emacs/Saving-Emacs-Sessions.html][Save desktop]] on exit
- Emacs uses both Yes/No and Y/N to ask for [[https://www.emacswiki.org/emacs/YesOrNoP][confirmation]]. I find this added security unnecessary and change it to single letter responses.
- Auto revert will update open buffers that were modified by another program.
- [[https://masteringemacs.org/article/introduction-to-ido-mode][IDo Mode]] (Interactively DO things) makes life a bit easier when switching buffers.
- Dired

#+BEGIN_SRC emacs-lisp
;; Emacs mechanics 

;; Save all backup files in one folder.
(setq backup-directory-alist '(("." . "~/.emacs.d/backups")))

;; Save desktop
(desktop-save-mode 1)

;; Yes or No
(defalias 'yes-or-no-p 'y-or-n-p)

;; Auto revert file when changed outside of Emacs
(global-auto-revert-mode 1)

;; IDo mode
(require 'ido)
(setq ido-enable-flex-matching t)
(setq ido-everywhere t)
(ido-mode 1)
(setq ido-file-extensions-order '(".org" ".fountain" ".R" ".el"))

;;Dired
(put 'dired-find-alternate-file 'disabled nil)
(require 'dired-x)
#+END_SRC
* Org Mode
The first part of the configuration sets the [[https://orgmode.org/manual/Activation.html#Activation][default keyboard shortcuts]] for Org Mode.
#+BEGIN_SRC emacs-lips
  ;; Org Mode Keyboard shortcuts
  (global-set-key "\C-cl" 'org-store-link)
  (global-set-key "\C-ca" 'org-agenda)
  (global-set-key "\C-cc" 'org-capture)
  (global-set-key "\C-cb" 'org-iswitchb)
#+END_SRC
** Visual elements
- [[https://orgmode.org/manual/Clean-view.html][Clean view]]
- Set image preview with to 600 pixels

#+BEGIN_SRC emacs-lisp
  ;; Org Mode Clean outline view
  (setq org-hide-emphasis-markers t
        org-hide-leading-stars t
        org-startup-indented t)

  ;; Org Mode Image preview size
  (setq org-image-actual-width 600)
#+END_SRC
** Getting Things Done
- [[https://orgmode.org/manual/Workflow-states.html#Workflow-states][Workflow states]]
- Logging [[https://orgmode.org/manual/Repeated-tasks.html][repeated actions]] is disabled
- Agenda commands
- [[https://github.com/lolownia/org-pomodoro][Org Pomodoro]]
#+BEGIN_SRC emacs-lisp
  ;; Getting Things Done

  ;; Workflow states
  (setq org-todo-keywords '((sequence "TODO(t)" "WAITING(w@/!)" "PARKED(p)" "|" "DONE(d!)" "CANCELLED(c@)")))

  ;; Don't log state chages of repeated tasks
  ;; Log changes in the logbook drawer
  (setq org-log-repeat nil
        org-log-into-drawer t
        org-log-done 'time)

  ;; Agenda settings
  (setq org-agenda-skip-deadline-if-done t
        org-agenda-skip-scheduled-if-done t
        org-agenda-include-diary t)

;;Org Pomodoro
(global-set-key (kbd "\C-cp") 'org-pomodoro)
#+END_SRC
** Making life easier
#+BEGIN_SRC emacs-lisp
(defun open-org-files-recursively (dirname)
  "Search DIRNAME recursively for org files, and open them all."
  (interactive "D")
  (mapc #'find-file (directory-files-recursively dirname "\\.org$" nil)))
#+END_SRC
* Writing text
This snippet changes various editing settings to my personal liking.
- [[https://www.gnu.org/software/emacs/manual/html_node/emacs/Visual-Line-Mode.html][Visual Line Mode]] wraps long lines near the window edge.
- [[https://www.emacswiki.org/emacs/FlySpell][FlySpell]] for spell-checking on the fly. The F7 key is mapped to suggesting alternatives for misspelled words.
- Auto complete
- [[https://fountain.io/][Fountain mode]] for writing theatre scripts.

#+BEGIN_SRC emacs-lisp
;; Editing configuration

;; Line wrapping
(global-visual-line-mode t)

;;Enable Fountain mode
(require 'fountain-mode)

;; Spell checking for Org and Fountain modes
(add-hook 'org-mode-hook 'turn-on-flyspell)
(add-hook 'fountain-mode-hook 'turn-on-flyspell)
(global-set-key (kbd "<f7>") 'ispell-word)

#+END_SRC
* Data Science
** 
